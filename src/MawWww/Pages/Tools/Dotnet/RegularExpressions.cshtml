@page
@using System.Text.RegularExpressions
@model RegularExpressionsPageModel
@{
    Model.Title = "Regular Expressions";
    Model.Area = PrimaryNavArea.Tools;
    Model.SetHtmlPageTitle(PrimaryNavArea.Tools, ".NET", "Regular Expressions");
}

@section sidebar {
    <partial name="_ToolsSidebar" />
}

@section scripts_footer {
    <partial name="_js_JqueryValidation" />
}

@await Html.PartialAsync("_AlertFormResponse", new AlertProps(Model,
    ErrorMessage: "Please correct the errors below."
))

<p>
    This tool will demonstrate if the input string results in a match based on the supplied regex.
</p>

<form method="post" autocomplete="off" role="form">
    <fieldset class="fieldset">
        <legend class="fieldset-legend text-secondary font-bold text-sm">RegEx Pattern</legend>
        <textarea class="textarea h-36 w-full" asp-for="Form.RegExPattern" autofocus></textarea>
        <span class="text-error" asp-validation-for="Form.RegExPattern"></span>
    </fieldset>

    <fieldset class="fieldset">
        <legend class="fieldset-legend text-secondary font-bold text-sm">Example Input</legend>
        <textarea class="textarea h-36 w-full" asp-for="Form.ExampleInput"></textarea>
        <span class="text-error" asp-validation-for="Form.ExampleInput"></span>
    </fieldset>

    <fieldset class="fieldset">
        <legend class="fieldset-legend text-secondary font-bold text-sm">Options</legend>
        <span class="text-error" asp-validation-for="Form.OptionNone"></span>

        <div class="flex flex-wrap justify-between *:mb-2">
            <div class="basis-1/3">
                <label class="cursor-pointer justify-start gap-4">
                    <input type="checkbox" class="checkbox" asp-for="Form.OptionCultureInvariant" />
                    <span class="ml-2">Culture Invariant</span>
                </label>
            </div>

            <div class="basis-1/3">
                <label class="cursor-pointer justify-start gap-4">
                    <input type="checkbox" class="checkbox" asp-for="Form.OptionEcmaScript" />
                    <span class="ml-2">ECMA Script</span>
                </label>
            </div>

            <div class="basis-1/3">
                <label class="cursor-pointer justify-start gap-4">
                    <input type="checkbox" class="checkbox" asp-for="Form.OptionExplicitCapture" />
                    <span class="ml-2">Explicit Capture</span>
                </label>
            </div>

            <div class="basis-1/3">
                <label class="cursor-pointer justify-start gap-4">
                    <input type="checkbox" class="checkbox" asp-for="Form.OptionIgnoreCase" />
                    <span class="ml-2">Ignore Case</span>
                </label>
            </div>

            <div class="basis-1/3">
                <label class="cursor-pointer justify-start gap-4">
                    <input type="checkbox" class="checkbox" asp-for="Form.OptionIgnorePatternWhitespace" />
                    <span class="ml-2">Ignore Pattern Whitespace</span>
                </label>
            </div>

            <div class="basis-1/3">
                <label class="cursor-pointer justify-start gap-4">
                    <input type="checkbox" class="checkbox" asp-for="Form.OptionMultiline" />
                    <span class="ml-2">Multiline</span>
                </label>
            </div>

            <div class="basis-1/3">
                <label class="cursor-pointer justify-start gap-4">
                    <input type="checkbox" class="checkbox" asp-for="Form.OptionNone" />
                    <span class="ml-2">None</span>
                </label>
            </div>

            <div class="basis-1/3">
                <label class="cursor-pointer justify-start gap-4">
                    <input type="checkbox" class="checkbox" asp-for="Form.OptionRightToLeft" />
                    <span class="ml-2">Right to Left</span>
                </label>
            </div>

            <div class="basis-1/3">
                <label class="cursor-pointer justify-start gap-4">
                    <input type="checkbox" class="checkbox" asp-for="Form.OptionSingleLine" />
                    <span class="ml-2">Single Line</span>
                </label>
            </div>
        </div>
    </fieldset>

    <button type="submit" class="btn btn-primary my-4">Submit</button>
</form>

@if(Model.RegexMatches != null) {
    string? results = null;

    switch(Model.RegexMatches.Count)     {
        case 0:
            results = "No matches found.";
            break;
        case 1:
            results = "1 match found.";
            break;
        default:
            results = string.Concat(Model.RegexMatches.Count, " matches found.");
            break;
    }

    <div class="mt-12">
        <strong>@results</strong>

        <ul>
        @foreach(Match match in Model.RegexMatches) {
            <li>Match: @match.Value
            @if(match.Groups != null && match.Groups.Count > 0) {
                int groupid = 0;

                <ul>
                @foreach(Group group in match.Groups) {
                    string name = string.Concat("[", groupid, " : ", Model.Form.RegEx?.GroupNameFromNumber(groupid), "]");

                    <li>Group: @name : @group.Value
                    @if(group.Captures != null && group.Captures.Count > 1) {
                        int captureid = 0;
                        <ul>
                        @foreach(Capture capture in group.Captures) {
                            <li>Capture: @capture.Value</li>
                            captureid++;
                        }
                        </ul>
                    }
                    </li>

                    groupid++;
                }
                </ul>
            }
            </li>
        }
        </ul>
    </div>
}
