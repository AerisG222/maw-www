# narrowly focused ansible deployment playbook for www.mikeandwan.us
---
- name: Configure Service Account
  hosts: webservers
  become: true

  tasks:
    - name: Add Service Account
      ansible.builtin.user:
        name: "{{ svcacct_name }}"
        password: "{{ svcacct_pwd | password_hash('sha512') }}"
        update_password: always
        state: present

    # fedora creates a unique subuid range automatically, so need to do this via usermod here

    - name: Enable Linger for Service Account
      ansible.builtin.command:
        cmd: loginctl enable-linger "{{ svcacct_name | quote }}"

    - name: Add SSH key to authorized_keys
      ansible.posix.authorized_key:
        user: "{{ svcacct_name }}"
        key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_rsa.pub') }}"
        state: present

- name: Configure Application
  hosts: webservers
  become: true
  become_user: "{{ svcacct_name }}"
  vars:
    pod: pod-maw-www
    img_maw_www: "docker.io/aerisg222/maw-www:latest"
    img_postgres: "docker.io/library/postgres:18-trixie"
    img_rclone: "docker.io/rclone/rclone:v1.71-stable"
    container_pg: maw-www-postgres
    container_www: maw-www
    container_rclone: rclone-archive
    dir_localroot: "{{ lookup('env', 'HOME') }}/maw-www/{{ mawenv }}"
    dir_root: "/home/{{ svcacct_name }}"
    dir_systemd: "{{ dir_root }}/.config/systemd/user"
    dir_approot: "{{ dir_root }}/maw-www"
    dir_pgdata: "{{ dir_approot }}/pg-data"
    dir_pgsecrets: "{{ dir_approot }}/pg-secrets"
    dir_pgbackups: "{{ dir_approot }}/pg-backups"
    dir_wwwdp: "{{ dir_approot }}/www-data-protection"
    dir_wwwenv: "{{ dir_approot }}/www-env"
    dir_wwwsecrets: "{{ dir_approot }}/www-secrets"
    dir_rcloneconf: "{{ dir_approot }}/rclone-config"
    dir_rclonesecrets: "{{ dir_approot }}/rclone-secrets"

  tasks:
    - name: Create Directories
      ansible.builtin.file:
        path: "{{ item }}"
        recurse: true
        state: directory
      loop:
        - "{{ dir_systemd }}"
        - "{{ dir_pgbackups }}"
        - "{{ dir_pgdata }}"
        - "{{ dir_pgsecrets }}"
        - "{{ dir_wwwsecrets }}"
        - "{{ dir_wwwdp }}"
        - "{{ dir_wwwenv }}"
        - "{{ dir_rcloneconf }}"
        - "{{ dir_rclonesecrets }}"

    - name: Copy Files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: u+rw
      loop:
        - src: "{{ dir_localroot }}/pg-secrets/psql-postgres"
          dest: "{{ dir_pgsecrets }}"
        - src: "{{ dir_localroot }}/www-env/maw-www.env"
          dest: "{{ dir_wwwenv }}"
        - src: "{{ dir_localroot }}/www-secrets/google-email-creds.json"
          dest: "{{ dir_wwwsecrets }}"
        - src: "{{ dir_localroot }}/www-secrets/maw-www.pfx"
          dest: "{{ dir_wwwsecrets }}"
        - src: "{{ dir_localroot }}/www-secrets/npgsql-passfile-svc_maw_www"
          dest: "{{ dir_wwwsecrets }}"
        - src: "{{ dir_localroot }}/rclone-config/rclone.conf"
          dest: "{{ dir_rcloneconf }}"
        - src: "{{ dir_localroot }}/rclone-secrets/rclone-gdrive-serviceaccount.json"
          dest: "{{ dir_rclonesecrets }}"

    - name: Pull Container Images
      containers.podman.podman_image:
        name: "{{ item }}"
      loop:
        - "{{ img_maw_www }}"
        - "{{ img_postgres }}"
        - "{{ img_rclone }}"

    - name: Create Pod Quadlet
      containers.podman.podman_pod:
        name: "{{ pod }}"
        state: quadlet
        userns: "keep-id:uid=1654"
        ports:
          - "8080:8080"
        quadlet_options:
          - "ServiceName={{ pod }}"

    - name: Create Postgres Quadlet
      containers.podman.podman_container:
        name: "{{ container_pg }}"
        image: "{{ img_postgres }}"
        state: quadlet
        read_only: true
        pod: "{{ pod }}.pod"
        user: 1654
        env:
          POSTGRES_PASSWORD_FILE: "/secrets/psql-postgres"
        volumes:
          - "{{ dir_pgdata }}:/var/lib/postgresql/data:Z"
          - "{{ dir_pgsecrets }}:/secrets:ro,Z"
          - "{{ dir_pgbackups }}:/backups:rw,Z"
        quadlet_options:
          - "AutoUpdate=registry"
          - "Pull=newer"
          - "ReadOnly=true"
          - |

            [Unit]
            Description=Container for www.mikeandwan.us database

            [Install]
            WantedBy=multi-user.target default.target

            [Service]
            Restart=on-failure

    - name: Create maw-www Quadlet
      containers.podman.podman_container:
        name: "{{ container_www }}"
        image: "{{ img_maw_www }}"
        state: quadlet
        read_only: true
        pod: "{{ pod }}.pod"
        user: 1654
        env_files:
          - "{{ dir_wwwenv }}/maw-www.env"
        mounts:
          - type=tmpfs,destination=/tmp
        volumes:
          - "{{ dir_wwwdp }}:/www-data-protection:Z"
          - "{{ dir_wwwsecrets }}:/www-secrets:ro,Z"
        quadlet_options:
          - "AutoUpdate=registry"
          - "Pull=newer"
          - "ReadOnly=true"
          - |

            [Unit]
            Description=Container for www.mikeandwan.us webserver
            After="{{ container_pg }}.container"
            Requires="{{ container_pg }}.container"

            [Install]
            WantedBy=multi-user.target default.target

            [Service]
            Restart=on-failure

    - name: Start and Enable Pod / Containers
      ansible.builtin.systemd_service:
        daemon_reload: true
        name: "{{ pod }}.service"
        scope: user
        enabled: true
        state: restarted

    - name: Copy DB Maintenance systemd services/timers
      ansible.builtin.template:
        dest: "{{ dir_systemd }}/{{ item.dest }}"
        src: "{{ item.src }}"
      loop:
        - {
            "src": "pg-maintenance.service.j2",
            "dest": "pg-maintenance.service",
          }
        - { "src": "pg-maintenance.timer.j2", "dest": "pg-maintenance.timer" }
        - { "src": "rclone-archive.timer.j2", "dest": "rclone-archive.timer" }

    - name: Enable Postgres Maintenance Systemd Timer
      ansible.builtin.systemd_service:
        daemon_reload: true
        name: "pg-maintenance.timer"
        scope: user
        enabled: true
        state: started

    - name: Create rclone-archive Quadlet
      containers.podman.podman_container:
        name: "{{ container_rclone }}"
        image: "{{ img_rclone }}"
        state: quadlet
        read_only: true
        pod: "{{ pod }}.pod"
        user: 1654
        mounts:
          - type=tmpfs,destination=/tmp
        volumes:
          - "{{ dir_rcloneconf }}:/config/rclone:ro,Z"
          - "{{ dir_rclonesecrets }}:/secrets:ro,Z"
          - "{{ dir_pgbackups }}:/backups:ro,Z"
        command: "-v --drive-impersonate mmorano@mikeandwan.us sync /backups gdrive:maw-www-{{ mawenv }}"
        quadlet_options:
          - "AutoUpdate=registry"
          - "Pull=newer"
          - "ReadOnly=true"
          - |

            [Unit]
            Description=Container for maw-www rclone archive

            [Service]
            Type=oneshot

    - name: Enable Rclone Archive Systemd Timer
      ansible.builtin.systemd_service:
        daemon_reload: true
        name: "rclone-archive.timer"
        scope: user
        enabled: true
        state: started
